{"componentChunkName":"component---src-templates-blog-post-js","path":"/finding-flows-suspended-by-dlp/","result":{"data":{"markdownRemark":{"id":"1acaf5a9-a808-5063-b7d8-fdc7fac9fee0","parent":{"relativePath":"blog/2021-01-12-finding-flows-suspended-by-dlp.md"},"fields":{"slug":"/finding-flows-suspended-by-dlp/"},"html":"<p>Let's start with installing proper modules. Check out <a href=\"https://powerapps.microsoft.com/en-us/blog/gdpr-admin-powershell-cmdlets/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PowerShell Cmdlets for PowerApps and Flow creators and administrators</a> for all the details. For now what we need is:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Install admin module for current user only</span>\n<span class=\"token function\">Install-Module</span> <span class=\"token operator\">-</span>Name Microsoft<span class=\"token punctuation\">.</span>PowerApps<span class=\"token punctuation\">.</span>Administration<span class=\"token punctuation\">.</span>PowerShell <span class=\"token operator\">-</span>Scope CurrentUser\n\n<span class=\"token comment\"># OR</span>\n\n<span class=\"token comment\"># Install admin module for everyone</span>\n<span class=\"token function\">Install-Module</span> <span class=\"token operator\">-</span>Name Microsoft<span class=\"token punctuation\">.</span>PowerApps<span class=\"token punctuation\">.</span>Administration<span class=\"token punctuation\">.</span>PowerShell</code></pre></div>\n<p>We're connecting with <a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powerapps.administration.powershell/add-powerappsaccount?view=pa-ps-latest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Add-PowerAppsAccount</code></a>.</p>\n<blockquote>\n<p><strong>NOTE</strong>: Remember that admin cmdlets will only list data from the environments you have access to. Make sure to use the account with proper permission level.</p>\n</blockquote>\n<p>For one-time check we don't have to care about unattended authentication so let's just run it with default options. We might need to respond to MFA challenge, depending on our account settings:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Add-PowerAppsAccount</span></code></pre></div>\n<p>Let's get all the flows and save them to variable:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$flows</span> = <span class=\"token function\">Get-AdminFlow</span></code></pre></div>\n<p>By checking first non-empty element from the array, we can inspect the properties we have on each flow:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$nonEmptyFlows</span> = <span class=\"token variable\">$flows</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>FlowName<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$f</span> = <span class=\"token variable\">$nonEmptyFlows</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Select-Object</span> <span class=\"token operator\">-</span>First 1\n<span class=\"token variable\">$f</span>\n\n<span class=\"token comment\"># Returns</span>\nFlowName         : xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx\nEnabled          : True\nDisplayName      : Send a customized email when a new file is added\nUserType         :\nCreatedTime      : 2020<span class=\"token operator\">-</span>03<span class=\"token operator\">-</span>26T08:38:08<span class=\"token punctuation\">.</span>6649446Z\nCreatedBy        : @<span class=\"token punctuation\">{</span>tenantId=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> objectId=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> us\n                   erId=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> userType=ActiveDirectory<span class=\"token punctuation\">}</span>\nLastModifiedTime : 2020<span class=\"token operator\">-</span>03<span class=\"token operator\">-</span>26T08:42:32<span class=\"token punctuation\">.</span>4957819Z\nEnvironmentName  : Default<span class=\"token operator\">-</span>xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx\nInternal         : @<span class=\"token punctuation\">{</span>name=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> id=<span class=\"token operator\">/</span>providers<span class=\"token operator\">/</span>Microsoft<span class=\"token punctuation\">.</span>ProcessSimple<span class=\"token operator\">/</span>environments<span class=\"token operator\">/</span>De\n                   fault<span class=\"token operator\">-</span>xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token operator\">/</span>flows<span class=\"token operator\">/</span>xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> <span class=\"token function\">type</span>=Micros\n                   oft<span class=\"token punctuation\">.</span>ProcessSimple<span class=\"token operator\">/</span>environments<span class=\"token operator\">/</span>flows<span class=\"token punctuation\">;</span> properties=<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notice that for the environments with no flows, we'll receive empty object. In my case first object from the array is empty:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$flows</span><span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Returns</span>\nvalue\n<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Ok, we now have all the flows, but do we only have <code class=\"language-text\">Enabled</code> property to check flow status? ðŸ¤”</p>\n<p>We have more, but they are hidden a little bit. Let's check what is under <code class=\"language-text\">Internal</code>:</p>\n<blockquote>\n<p><strong>NOTE</strong>: Remember to use <code class=\"language-text\">Format-List</code>. Otherwise, you might not see all the properties (same applies to <code class=\"language-text\">| Select-Object *</code>).</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> <span class=\"token variable\">$f</span><span class=\"token punctuation\">.</span>internal <span class=\"token punctuation\">|</span> <span class=\"token function\">Format-List</span>\n\n<span class=\"token comment\"># Returns</span>\nname       : xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx\nid         : <span class=\"token operator\">/</span>providers<span class=\"token operator\">/</span>Microsoft<span class=\"token punctuation\">.</span>ProcessSimple<span class=\"token operator\">/</span>environments<span class=\"token operator\">/</span>Default<span class=\"token operator\">-</span>xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token operator\">/</span>flows<span class=\"token operator\">/</span>xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx\n<span class=\"token function\">type</span>       : Microsoft<span class=\"token punctuation\">.</span>ProcessSimple<span class=\"token operator\">/</span>environments<span class=\"token operator\">/</span>flows\nproperties : @<span class=\"token punctuation\">{</span>apiId=<span class=\"token operator\">/</span>providers<span class=\"token operator\">/</span>Microsoft<span class=\"token punctuation\">.</span>PowerApps<span class=\"token operator\">/</span>apis<span class=\"token operator\">/</span>shared_logicflows<span class=\"token punctuation\">;</span> displayName=Send a customized email when a new file i\n             s added<span class=\"token punctuation\">;</span> state=Started<span class=\"token punctuation\">;</span> sharingType=Coauthor<span class=\"token punctuation\">;</span> createdTime=2020<span class=\"token operator\">-</span>03<span class=\"token operator\">-</span>26T08:38:08<span class=\"token punctuation\">.</span>6649446Z<span class=\"token punctuation\">;</span> lastModifiedTime=2020<span class=\"token operator\">-</span>03<span class=\"token operator\">-</span>26T\n             08:42:32<span class=\"token punctuation\">.</span>4957819Z<span class=\"token punctuation\">;</span> flowSuspensionReason=None<span class=\"token punctuation\">;</span> templateName=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> environment=<span class=\"token punctuation\">;</span> definitio\n             nSummary=<span class=\"token punctuation\">;</span> creator=<span class=\"token punctuation\">;</span> provisioningMethod=FromDefinition<span class=\"token punctuation\">;</span> flowFailureAlertSubscribed=True<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And under <code class=\"language-text\">Properties</code></p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> <span class=\"token variable\">$f</span><span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>properties <span class=\"token punctuation\">|</span><span class=\"token function\">Format-List</span>\n\n\napiId                      : <span class=\"token operator\">/</span>providers<span class=\"token operator\">/</span>Microsoft<span class=\"token punctuation\">.</span>PowerApps<span class=\"token operator\">/</span>apis<span class=\"token operator\">/</span>shared_logicflows\ndisplayName                : Send a customized email when a new file is added\nstate                      : Started\nsharingType                : Coauthor\ncreatedTime                : 2020<span class=\"token operator\">-</span>03<span class=\"token operator\">-</span>26T08:38:08<span class=\"token punctuation\">.</span>6649446Z\nlastModifiedTime           : 2020<span class=\"token operator\">-</span>03<span class=\"token operator\">-</span>26T08:42:32<span class=\"token punctuation\">.</span>4957819Z\nflowSuspensionReason       : None\ntemplateName               : 827b37728b634ba89e3e6678ddff334e\nenvironment                : @<span class=\"token punctuation\">{</span>name=Default<span class=\"token operator\">-</span>xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> <span class=\"token function\">type</span>=Microsoft<span class=\"token punctuation\">.</span>ProcessSimple<span class=\"token operator\">/</span>environments<span class=\"token punctuation\">;</span> id=<span class=\"token operator\">/</span>\n                             providers<span class=\"token operator\">/</span>Microsoft<span class=\"token punctuation\">.</span>ProcessSimple<span class=\"token operator\">/</span>environments<span class=\"token operator\">/</span>Default<span class=\"token operator\">-</span>xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">}</span>\ndefinitionSummary          : @<span class=\"token punctuation\">{</span>triggers=System<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> actions=System<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> description=Send yourself or someone <span class=\"token keyword\">else</span> a cus\n                             tomized email whenever a new file is added to a selected SharePoint document library<span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\ncreator                    : @<span class=\"token punctuation\">{</span>tenantId=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> objectId=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> user\n                             Id=xxxxxxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxx<span class=\"token operator\">-</span>xxxxxxxxxxxx<span class=\"token punctuation\">;</span> userType=ActiveDirectory<span class=\"token punctuation\">}</span>\nprovisioningMethod         : FromDefinition\nflowFailureAlertSubscribed : True</code></pre></div>\n<p>Ok, now we have two candidates: State and flowSuspensionReason. The latter seems more appropriate. However, it doesn't contain any useful value - I already checked that for you.</p>\n<p>Let's check what are the values:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> <span class=\"token variable\">$nonEmptyFlows</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Group</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>NoElement\n\nCount Name\n<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span> <span class=\"token operator\">--</span>-<span class=\"token operator\">-</span>\n   73 Started\n   27 Stopped\n    9 Suspended\n\n<span class=\"token function\">PS</span>> <span class=\"token variable\">$nonEmptyFlows</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Group</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>flowSuspensionReason<span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span>NoElement\n\nCount Name\n<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span> <span class=\"token operator\">--</span>-<span class=\"token operator\">-</span>\n  109 None</code></pre></div>\n<p>We'll be looking for flows with <code class=\"language-text\">State</code> = <strong>Suspended</strong>. Simple <code class=\"language-text\">Where-Object</code> will do:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$suspendedFlows = $nonEmptyFlows | Where-Object {$_.internal.properties.state -eq &quot;Suspended&quot;}</code></pre></div>\n<p>Now you have all the flows with their data saved into variable. Before reaching out to flow owners with the communication, make sure to read my previous article <a href=\"/custom-connectors-with-dlp-policy/\">Custom connectors with DLP policy in Power Automate</a>. You'll learn about the behavior of DLP for custom connectors and what happens when you disable/rollback the policy.</p>","frontmatter":{"date":"2021-01-12 19:23","title":"Finding flows suspended by DLP","description":"So you designed and implemented Data Loss Prevention policy in Power Automate. Now it's time to check if there was any impact on existing flows.","tags":["power automate","power platform","data loss prevention","flow"]}}},"pageContext":{"id":"1acaf5a9-a808-5063-b7d8-fdc7fac9fee0"}},"staticQueryHashes":["2483265550"]}