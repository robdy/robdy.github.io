{"componentChunkName":"component---src-templates-blog-post-js","path":"/adddays-with-format-for-dates/","result":{"data":{"markdownRemark":{"id":"416f1816-813e-5b57-bb9b-a7c3851b7eef","parent":{"relativePath":"blog/2021-02-13-adddays-with-format-for-dates.md"},"fields":{"slug":"/adddays-with-format-for-dates/"},"html":"<h2 id=\"case-description\" style=\"position:relative;\"><a href=\"#case-description\" aria-label=\"case description permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Case description</h2>\n<p>In one of my scripts I name my files using <code class=\"language-text\">yyyyMMdd</code> format. Every few days I'd like to cleanup the old files.</p>\n<p>In that particular case I don't want to rely on the date of creation nor modification date.</p>\n<blockquote>\n<p><strong>NOTE</strong>: There's no solid reasoning behind that, I simply have chosen that design. Thanks to that I notice something worth sharing and there it is ðŸ˜‰</p>\n</blockquote>\n<p>My expected output is the date from 30 days ago in the desired format. Format is saved in variable <code class=\"language-text\">$dateFormat</code>.</p>\n<h2 id=\"incorrect-solutions\" style=\"position:relative;\"><a href=\"#incorrect-solutions\" aria-label=\"incorrect solutions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Incorrect solutions</h2>\n<p>If you try to run any of these cmdlet's, they won't work:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$dateFormat</span> = <span class=\"token string\">'yyyyMMdd'</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Let's break them down and see, why.</p>\n<p>First option does the following, going step by step:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Prerequisite - define date format</span>\n<span class=\"token variable\">$dateFormat</span> = <span class=\"token string\">'yyyyMMdd'</span>\n\n<span class=\"token comment\"># Gets current date</span>\n<span class=\"token function\">Get-Date</span>\n<span class=\"token comment\"># Subtracts 30 days from the date</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Tries to specify the formatting</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span></code></pre></div>\n<p>If we run them step-by-step, only the last line fails. The error is:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">At line:1 char:25\n<span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span>\n<span class=\"token operator\">+</span>                         ~~~~~~~\nUnexpected token <span class=\"token string\">'-Format'</span> in expression or statement<span class=\"token punctuation\">.</span>\nAt line:1 char:33\n<span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span>\n<span class=\"token operator\">+</span>                                 ~~~~~~~~~~~\nUnexpected token <span class=\"token string\">'$dateFormat'</span> in expression or statement<span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">+</span> CategoryInfo          : ParserError: <span class=\"token punctuation\">(</span>:<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ParentContainsErrorRecordException\n    <span class=\"token operator\">+</span> FullyQualifiedErrorId : UnexpectedToken</code></pre></div>\n<p>In simple English it says: you tried to specified <code class=\"language-text\">-Format</code> for something which doesn't accept that parameter.</p>\n<p>If we check it carefully, we might notice that we're trying to specify format to the output of <code class=\"language-text\">AddDays()</code>, not to <code class=\"language-text\">Get-Date</code>. If we change the order, we get our second solution. Let's analyse step-by-step:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># We already have $dateFormat, no need to specify again</span>\n<span class=\"token comment\"># $dateFormat = 'yyyyMMdd'</span>\n\n<span class=\"token comment\"># Gets current date</span>\n<span class=\"token function\">Get-Date</span>\n<span class=\"token comment\"># Convert it to the format specified</span>\n<span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span>\n<span class=\"token comment\"># Tries to subtract 30 days</span>\n<span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span></code></pre></div>\n<p>As previously, the last line fails. This time with:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Method invocation failed because <span class=\"token namespace\">[System.String]</span> does not contain a method named <span class=\"token string\">'AddDays'</span><span class=\"token punctuation\">.</span>\nAt line:1 char:1\n<span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">+</span> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    <span class=\"token operator\">+</span> CategoryInfo          : InvalidOperation: <span class=\"token punctuation\">(</span>:<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> RuntimeException\n    <span class=\"token operator\">+</span> FullyQualifiedErrorId : MethodNotFound</code></pre></div>\n<p>Error message gives us pretty clear explanation why it fails, but where on earth did we use <code class=\"language-text\">[System.String]</code>?</p>\n<p>The key is the <code class=\"language-text\">-Format</code> parameter for Get-Date. When used, the cmdlet outputs the value as a string. We can confirm it by invoking <code class=\"language-text\">GetType()</code> function:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">PS</span>> <span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>GetType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nIsPublic IsSerial Name     BaseType\n<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span> <span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span> <span class=\"token operator\">--</span>-<span class=\"token operator\">-</span>     <span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>\nTrue     True     DateTime System<span class=\"token punctuation\">.</span>ValueType\n\n\n<span class=\"token function\">PS</span>> <span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>GetType<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nIsPublic IsSerial Name    BaseType\n<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span> <span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span> <span class=\"token operator\">--</span>-<span class=\"token operator\">-</span>    <span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>\nTrue     True     String  System<span class=\"token punctuation\">.</span>Object</code></pre></div>\n<p>String type doesn't have <code class=\"language-text\">AddDays</code> method. It's quite obvoius but let's confirm it using <code class=\"language-text\">Get-Member</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Get-Member</span> <span class=\"token operator\">-</span>Name AddDays</code></pre></div>\n<p>No suprise, nothing in output.</p>\n<h2 id=\"correct-solution\" style=\"position:relative;\"><a href=\"#correct-solution\" aria-label=\"correct solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Correct solution</h2>\n<p>We already know what to do - use <code class=\"language-text\">AddDays()</code> on <code class=\"language-text\">DateTime</code> object and remember about conversion to <code class=\"language-text\">String</code> forced by <code class=\"language-text\">-Format</code>.</p>\n<p>Let's do it in two steps</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># We already have $dateFormat, no need to specify again</span>\n<span class=\"token comment\"># $dateFormat = 'yyyyMMdd'</span>\n\n<span class=\"token comment\"># Calculate desired date</span>\n<span class=\"token variable\">$30DaysAgo</span> = <span class=\"token punctuation\">(</span><span class=\"token function\">Get-Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>AddDays<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>30<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Convert to DateTime and apply formatting</span>\n<span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Date <span class=\"token variable\">$30DaysAgo</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span></code></pre></div>\n<p>By having a quick look at the <a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-date?view=powershell-7.1#parameters\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">docs of <code class=\"language-text\">Get-Date</code></a> (emphasis mine):</p>\n<blockquote>\n<p>-Date</p>\n<p>Type:\tDateTime</p>\n<p>Aliases:\tLastWriteTime</p>\n<p>Position:\t<strong>0</strong></p>\n<p>Default value:\tNone</p>\n<p>Accept pipeline input:\t<strong>True</strong></p>\n<p>Accept wildcard characters:\tFalse</p>\n</blockquote>\n<p>We discover that we might skip <code class=\"language-text\">-Date</code> (due to numbered position) or we can use pipeline (as it accepts pipeline input). In that case our last line might be:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Numbered position</span>\n<span class=\"token function\">Get-Date</span> <span class=\"token variable\">$30DaysAgo</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span>\n<span class=\"token comment\"># Pipeline input</span>\n<span class=\"token variable\">$30DaysAgo</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Get-Date</span> <span class=\"token operator\">-</span>Format <span class=\"token variable\">$dateFormat</span></code></pre></div>\n<h2 id=\"lessons-learned\" style=\"position:relative;\"><a href=\"#lessons-learned\" aria-label=\"lessons learned permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lessons learned</h2>\n<ul>\n<li><code class=\"language-text\">-Format</code> on <code class=\"language-text\">Get-Date</code> changes type of the output from <code class=\"language-text\">DateTime</code> to <code class=\"language-text\">String</code></li>\n<li>We can convert <code class=\"language-text\">DateTime</code> object to specific format running <code class=\"language-text\">Get-Date</code> with <code class=\"language-text\">-Format</code> parameter on it</li>\n<li><code class=\"language-text\">Date</code> parameter on <code class=\"language-text\">Get-Date</code> is the default one so we can supply the data by using position or pipeline</li>\n</ul>","frontmatter":{"date":"2021-02-13 19:14","title":"AddDays with Format for dates","description":"How I troubleshooted incorrect output from Get-Date while using both AddDays() and -Format on it.","tags":["powershell"]}}},"pageContext":{"id":"416f1816-813e-5b57-bb9b-a7c3851b7eef"}},"staticQueryHashes":["2483265550"]}