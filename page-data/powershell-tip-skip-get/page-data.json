{"componentChunkName":"component---src-templates-blog-post-js","path":"/powershell-tip-skip-get/","result":{"data":{"markdownRemark":{"id":"9251f31a-f5bd-50db-a44a-1e89b00210fd","parent":{"relativePath":"blog/2017-07-28-powershell-tip-skip-get.md"},"fields":{"slug":"/powershell-tip-skip-get/"},"html":"<p>Interesting thing which I discovered today (BTW, SysAdmin day).</p>\n<p>Instead of using</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Get-Mailbox</span> yourname@domain<span class=\"token punctuation\">.</span>com</code></pre></div>\n<p>you can just use</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Mailbox yourname@domain<span class=\"token punctuation\">.</span>com</code></pre></div>\n<p>It looks like it’s not an alias as Get-Alias cmdlet doesn’t show anything for these noun-only cmdlets.</p>\n<p><del>Unfortunately it has one significant drawback: Tab completion/Intellisense in ISE will not be working with such cmdlets which makes them quite useless. But for ad-hoc checking can be helpful.</del></p>\n<h3 id=\"update-2018-12-06\" style=\"position:relative;\"><a href=\"#update-2018-12-06\" aria-label=\"update 2018 12 06 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update 2018-12-06:</h3>\n<p>After digging a bit more I found far more information about that default verb feature. First of all, I check if that is something built into some modules so I tried cmdlets from multiple modules:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">service\naduser mySan\nExcelColumnName <span class=\"token comment\"># random cmdlet from ImportExcel module</span></code></pre></div>\n<p>The only cmdlet I cannot run is </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">process</code></pre></div>\n<p>But it's due to conflict with <code class=\"language-text\">begin process end</code>.</p>\n<p>I also discovered that tab completion apparently works (in contrary to what I wrote in that post previously) but only for parameters, not for cmdlets.</p>\n<h3 id=\"how-i-investigated\" style=\"position:relative;\"><a href=\"#how-i-investigated\" aria-label=\"how i investigated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How I investigated?</h3>\n<!--more-->\n<p>As stated in <a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_command_precedence?view=powershell-6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">About Command Precedence</a>:</p>\n<blockquote>\n<p>If you do not specify a path, PowerShell uses the following precedence\norder when it runs commands:</p>\n<ol>\n<li>Alias</li>\n<li>Function</li>\n<li>Cmdlet</li>\n<li>Native Windows commands</li>\n</ol>\n</blockquote>\n<p>Checking one by one (based on <code class=\"language-text\">Get-Service</code>):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Checking for alias\nPS C:\\&gt; Get-Alias service\nGet-Alias : This command cannot find a matching alias because an alias\nwith the name &#39;service&#39; does not exist.\n\n# Checking for function\nPS C:\\&gt; Get-Command -Name service -CommandType Function\nGet-Command : The term &#39;service&#39; is not recognized as the name of a cmdlet,\nfunction, script file, or operable program. Check the spelling of the name,\nor if a path was included, verify that the path is correct and try again.\n\n# Checking for cmdlet\nPS C:\\&gt; Get-Command -Name service -CommandType Cmdlet\nGet-Command : The term &#39;service&#39; is not recognized as the name of a cmdlet, \nfunction, script file, or operable program. Check the spelling of the name,\nor if a path was included, verify that the path is correct and try again.</code></pre></div>\n<p>Next in cmd (for native Windows commands):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">C:\\&gt;service\n&#39;service&#39; is not recognized as an internal or external command,\noperable program or batch file.</code></pre></div>\n<h3 id=\"what-next\" style=\"position:relative;\"><a href=\"#what-next\" aria-label=\"what next permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What next?</h3>\n<p>What gave me the answer was searching in <a href=\"https://stackoverflow.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Stack Overflow</a>. First interesting thing I found was <a href=\"https://stackoverflow.com/a/44476385/9902555\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this answer</a>:</p>\n<blockquote>\n<p>If the command name does <em>not</em> contain a dash or a slash, and no command has been found after exhausting the last option in the list above, it'll try again, but <a href=\"https://github.com/PowerShell/PowerShell/blob/02b5f357a20e6dee9f8e60e3adb9025be3c94490/src/System.Management.Automation/engine/CommandDiscovery.cs#L1193\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">with <code class=\"language-text\">Get-</code> prepended</a>.</p>\n</blockquote>\n<p>And below, there's an explanation <a href=\"https://stackoverflow.com/a/44477329/9902555\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">why <code class=\"language-text\">Get-Command</code> doesn't follow that logic</a>.</p>","frontmatter":{"date":"2017-07-28 10:11","title":"PowerShell tip - skip \"Get\"","description":"In PowerShell you can skip the verb “Get” (at least for most cmdlets – it isn't working for things like Get-Process).","tags":["powershell"]}}},"pageContext":{"id":"9251f31a-f5bd-50db-a44a-1e89b00210fd"}},"staticQueryHashes":["2483265550"]}